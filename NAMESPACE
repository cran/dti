useDynLib(dti, .registration = TRUE, .fixes = "C_")

#exportPattern("^[^\\.]")

import(methods, parallel, oro.nifti, oro.dicom, adimpro, gsl, rgl, awsMethods, quadprog)
#importFrom("Rsolnp", "solnp")
importFrom("grDevices", "col2rgb", "dev.off", "grey", "heat.colors",
           "png", "rainbow", "rgb")
importFrom("graphics", "plot", "axis", "contour", "identify", "legend",
           "lines", "par", "text", "title")
importFrom("stats", "IQR", "as.dist", "bw.nrd", "coef", "coefficients",
           "density", "dnorm", "lm", "median", "nls", "optim",
           "optimize", "qchisq", "qnorm", "quantile", "rchisq",
           "runif", "sd")
importFrom("utils", "data", "setTxtProgressBar", "txtProgressBar")


exportClasses("dwi", "dtiData", "dtiTensor", "dtiIndices", "dwiQball",
              "dwiMixtensor", "dwiFiber", "dkiTensor", "dkiIndices")
exportMethods("show", "plot", "print", "summary", "dti.smooth", "dtiTensor",
              "dtiIndices", "dwiQball", "dwiMixtensor", "dwiMtCombine",
              "dwiRiceBias", "dkiTensor", "dkiIndices", "dwiMD")
exportMethods("extract", "show3d", "tracking", "selectFibers", "reduceFibers",
              "touchingFibers", "combineFibers", "getmask", "sdpar",
              "getsdofsb", "dwi.smooth", "dwi.smooth.ms")
export(dtiData, readDWIdata, subsetg, combineDWIdata, awssigmc, awslsigmc, afsigmc,
       aflsigmc, dkiIndices, showFAColorScale, tensor2medinria, medinria2tensor)
#export(hg1f1)
